/*!******************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./assets/src/scss/normes.scss ***!
  \******************************************************************************************************************************************************************************/
@charset "UTF-8";
/**
 * Import settings, functions, mixins, variables.
 */
/**
 * Add customizable settings to help implementing to all website.
 */
/**
 * @TODO: Define the responsive way to resize the website.
 *
 * With the "fixed" method, the website will have multiple pre-defined breakpoints.
 * With the fluid" method, the website will always use 100% of the available space.
 *
 * @usage $website-container-type: "fixed";
 * @usage $website-container-type: "fluid";
 */
/**
 * @TODO: Define the way to contain the header.
 *
 * With the "contained" method, the header will be contained with the website content.
 * With the "stretched" method, the header will be not contained with the website content.
 *
 * @usage $header-container-type: "contained";
 * @usage $header-container-type: "stretched";
 */
/**
 * @TODO: Define the max-width that the website will stop stretching.
 * *
 * @usage $website-container-max-width: 1940px;
 * @usage $website-container-max-width: 1600px;
 * @usage $website-container-max-width: 1280px;
 */
/**
 * @TODO: If true, add some styles to style the submenu.
 *
 * @usage $header-with-submenu: false;
 * @usage $header-with-submenu: true;
 */
/**
 * @TODO: If true, remove some styles to always keep the main menu always mobile.
 *
 * @usage $menu-is-always-mobile: false;
 * @usage $menu-is-always-mobile: true;
 */
/**
 * @TODO: Define if you use the font-size hack
 *
 * Fixes the font-size hack for websites using 62.5% font-sizing to use em as pixel.
 * Change $font-size-hack to true if your website use the font-size hack.
 *
 * @param {Length} $value - The value to fix.
 * @param {Boolean} [$font-size-hack: false] - Whether the font-size hack is used on the website.
 * @return {Length} - The fixed value.
 *
 * @usage fix-font-size-hack(1em, false) => 1em
 * @usage fix-font-size-hack(1em, true) => 1.6em
 * @usage fix-font-size-hack(1rem, false) => 1rem
 * @usage fix-font-size-hack(1rem, true) => 1.6rem
 */
/**
 * @TODO: Insert the prefix name that you want to see before some classes that wraps round the main elements.
 *
 * This is done to prevent name-clashes between generic names.
 * This can be left empty and it will not cause issues.
 * Be cautious, if you use this settings, the html examples given with this packages will not
 * work properly until you adjust the class names with the prefix you configured bellow.
 *
 * For now only the classes are prefixed with this variable:
 * .container
 * .container-fullwidth
 * .header
 * .footer
 * .main
 * .divider
 *
 * @usage $prefix: "normes-web-";
 * @usage $prefix: "ulaval-";
 */
/**
 * Define basic functions that can be used by any website.
 */
/*
 * Remove the unit of a length
 * @param {Number} $number - Number to remove unit from
 * @return {Number} - Unitless number
Â¸*/
/**
 * Converts a pixel value to an rem value based on a given context.
 *
 * @param {Number|Length} $pixels - The pixel value to convert to rem.
 * @param {Number|Length} [$context: $browser-context] - The context value in pixels used for the conversion.
 * @return {Length} - The calculated value in rem.
 *
 * @usage rem(16px) => 1rem
 * @usage rem(24) => 1.5rem
 * @usage rem(16, 10) => 1.6rem
 */
/**
 * Converts a pixel value to an em value based on a given context.
 *
 * @param {Number|Length} $pixels - The pixel value to convert to em.
 * @param {Number|Length} [$context: $browser-context] - The context value in pixels used for the conversion.
 * @return {Length} - The calculated value in em.
 *
 * @usage em(16px) => 1em
 * @usage em(24) => 1.5em
 * @usage em(16, 10) => 1.6em
 */
/**
 * Converts a em value to an pixel value based on a given context.
 *
 * @param {Number|Length} $em - The em value to convert to pixels.
 * @param {Number|Length} [$context: $browser-context] - The context value in em used for the conversion.
 * @return {Length} - The calculated value in pixels.
 *
 * @usage px(1em) => 16px
 * @usage px(1) => 16px
 * @usage px(1, 10) => 10px
 */
/**
 * Define basic mixins that can be used by any website.
 */
/**
 * Creates a fluid transition for a specified CSS property between two breakpoints.
 *
 * @param {String} $property - The CSS property to apply the fluid transition to.
 * @param {Value} $value-start - The starting value of the property.
 * @param {Value} $value-end - The ending value of the property.
 * @param {Breakpoint} $breakpoint-start - The starting breakpoint where the fluid transition begins.
 * @param {Breakpoint} $breakpoint-end - The ending breakpoint where the fluid transition stops.
 *
 * @example
 * // Usage:
 * .element {
 *   @include property-with-fluid-value('font-size', 18px, 24px, 1280px, 1600px);
 * }
 *
 *  // Output:
 * .element {
 *   font-size: 14px;
 *   font-size: calc(14px + (6vw - 48px) * 0.0666667);
 * }
 */
/**
 * Generates a z-index property with optional adjustments and importance.
 *
 * @param {String} $layer - The logical layer name for the desired z-index value.
 * @param {Number} $added-value - (Optional) Additional value to adjust the z-index.
 *
 * @example
 * // Usage:
 * .modal {
 *   @include z-index('modal', 10);
 * }
 *
 * // Output:
 * .modal {
 *   z-index: 610;
 * }
 */
/**
 * Define basic breakpoints that can be used by any website.
 * Always use mobile-first when using breakpoints.
 */
/**
 * Define basic colors that can be used by any website.
 */
/**
 * Define basic website container variables.
 */
:root {
  --img-secure: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath d='m0,8C0,3.58,3.58,0,8,0s8,3.58,8,8-3.58,8-8,8C3.58,16,0,12.42,0,8Zm8,6.22c1.17,0,2.31-.33,3.3-.95-1.7-1.83-4.56-1.94-6.39-.24-.08.07-.15.15-.23.23.99.63,2.14.96,3.32.96Zm3.26-3.25c.52.32.99.7,1.39,1.15,2.28-2.57,2.04-6.5-.53-8.78S5.63,1.3,3.35,3.87c-2.08,2.35-2.09,5.88-.02,8.23,2.04-2.22,5.36-2.7,7.94-1.13h0Zm-6.26-4.3c0-1.66,1.34-3,3-3s3,1.34,3,3-1.34,3-3,3-3-1.34-3-3Zm1.48,0c0,.84.68,1.52,1.52,1.51.84,0,1.52-.68,1.51-1.52,0-.84-.68-1.51-1.52-1.51-.84,0-1.52.68-1.52,1.52h0Z' fill='%23040405'/%3E%3C/svg%3E");
  --img-secure-logged: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15.73 15.73'%3E%3Cpath d='m8,0c4.34.07,7.81,3.65,7.74,7.99-.07,4.34-3.65,7.81-7.99,7.74C3.39,15.66-.07,12.08,0,7.74c0,0,0,0,0,0C.08,3.39,3.66-.07,8,0Z' fill='%23040405'/%3E%3Cpath d='m7.93,3.61c1.63.03,2.93,1.37,2.9,3-.03,1.63-1.37,2.93-3,2.9-1.63-.03-2.93-1.37-2.9-3,0,0,0,0,0,0,.03-1.63,1.37-2.92,3-2.9Zm-.08,4.44c.82.01,1.5-.64,1.52-1.47s-.64-1.5-1.47-1.52c-.82-.01-1.5.64-1.52,1.47-.01.82.64,1.5,1.47,1.52Z' fill='%23fff'/%3E%3Cpath d='m10.97,13.12h0c-.27-.31-.58-.58-.92-.8-.7-.46-1.51-.7-2.35-.7-1.2,0-2.34.5-3.16,1.37-.49-.33-.92-.73-1.29-1.19,1.15-1.25,2.76-1.96,4.45-1.97,1.16,0,2.3.34,3.27.98.5.32.95.72,1.33,1.18-.39.44-.84.82-1.34,1.12Z' fill='%23fff'/%3E%3C/svg%3E");
  --img-dropdown-arrow: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='13.811' height='7.797' viewBox='0 0 13.811 7.797'%3E%3Cpath d='M8.268,16.029a.375.375,0,0,1,.528,0l5.729,5.729,5.733-5.729a.375.375,0,0,1,.528.528l-5.995,6a.367.367,0,0,1-.528,0l-5.995-6A.375.375,0,0,1,8.268,16.029Z' transform='translate(-7.607 -15.368)' fill='none' stroke='%23000' stroke-width='1'/%3E%3C/svg%3E%0A");
}

[class^=ul-i-],
[class*=" ul-i-"] {
  width: 16px;
  height: 16px;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  display: inline-block;
}

.mobile-menu-open .ul-secure-login i,
.mobile-menu-open .ul-secure-menu-trigger i {
  transition: filter 0.5s ease;
  filter: invert(1);
}
.mobile-menu-open .ul-secure-login:hover, .mobile-menu-open .ul-secure-login:active, .mobile-menu-open .ul-secure-login:focus,
.mobile-menu-open .ul-secure-menu-trigger:hover,
.mobile-menu-open .ul-secure-menu-trigger:active,
.mobile-menu-open .ul-secure-menu-trigger:focus {
  background-color: #ffffff;
}
.mobile-menu-open .ul-secure-login:hover i, .mobile-menu-open .ul-secure-login:active i, .mobile-menu-open .ul-secure-login:focus i,
.mobile-menu-open .ul-secure-menu-trigger:hover i,
.mobile-menu-open .ul-secure-menu-trigger:active i,
.mobile-menu-open .ul-secure-menu-trigger:focus i {
  transition: none;
  filter: none;
}
.mobile-menu-open .ul-secure-login:hover:after, .mobile-menu-open .ul-secure-login:active:after, .mobile-menu-open .ul-secure-login:focus:after,
.mobile-menu-open .ul-secure-menu-trigger:hover:after,
.mobile-menu-open .ul-secure-menu-trigger:active:after,
.mobile-menu-open .ul-secure-menu-trigger:focus:after {
  filter: none;
}
.mobile-menu-open .ul-secure-menu-trigger:hover:after, .mobile-menu-open .ul-secure-menu-trigger:active:after {
  filter: none;
}
.mobile-menu-open .ul-secure-menu-trigger:after {
  filter: invert(1);
}

.ul-i-login {
  background-image: var(--img-secure);
  display: block;
}

.ul-i-secure-logged {
  background-image: var(--img-secure-logged);
  display: block;
}

.ul-secure-login {
  display: block;
  padding: 1rem;
  line-height: 1rem;
  color: #000000;
}
.ul-secure-login:hover, .ul-secure-login:active, .ul-secure-login:focus {
  background-color: #000000;
}
.ul-secure-login:hover i, .ul-secure-login:active i, .ul-secure-login:focus i {
  filter: invert(1);
}

.ul-secure-menu-trigger {
  border: 0;
  background: none;
  padding: 1rem 0.591rem;
  color: #000000;
  box-sizing: border-box;
  line-height: 1rem;
  display: flex;
  align-items: center;
}
.ul-secure-menu-trigger:after {
  display: inline-block;
  width: 13px;
  height: 7px;
  content: "";
  background-image: var(--img-dropdown-arrow);
  background-size: 13px 7px;
  margin-left: 4px;
  margin-top: 2px;
}
.ul-secure-menu-trigger:hover, .ul-secure-menu-trigger:active, .ul-secure-menu-trigger:focus, .ul-secure-menu-trigger[aria-expanded=true] {
  background-color: #000000;
}
.ul-secure-menu-trigger:hover:after, .ul-secure-menu-trigger:active:after, .ul-secure-menu-trigger:focus:after, .ul-secure-menu-trigger[aria-expanded=true]:after {
  filter: invert(1);
}
.ul-secure-menu-trigger:hover .ul-i-secure-logged, .ul-secure-menu-trigger:active .ul-i-secure-logged, .ul-secure-menu-trigger:focus .ul-i-secure-logged, .ul-secure-menu-trigger[aria-expanded=true] .ul-i-secure-logged {
  background-image: var(--img-secure-logged);
  filter: invert(1);
}
.ul-secure-menu-trigger[aria-expanded=true]:after {
  transform: scaleY(-1);
}

.ul-secure-menu-container {
  position: relative;
}

.ul-secure-menu {
  position: absolute;
  background-color: #000000;
  color: #ffffff;
  top: 100%;
  right: 0;
  margin: 0;
  padding: 0;
  list-style: none;
  border: 1px #000000 solid;
  white-space: nowrap;
}
.ul-secure-menu .menu-item:not(:first-child) {
  border-top: 1px #808080 solid;
}
.ul-secure-menu .menu-link {
  display: block;
  color: #ffffff;
  padding: 0.591rem;
  box-sizing: border-box;
  line-height: 1rem;
  font-size: 0.875rem;
  text-decoration: none;
}
.ul-secure-menu .menu-link:not(.ul-secure-logout) {
  font-weight: 600;
}
.ul-secure-menu .menu-link:hover {
  color: #000000;
  background-color: #ffffff;
  text-decoration: underline;
}
.ul-secure-menu .menu-link:focus, .ul-secure-menu .menu-link:focus-visible {
  outline: 1px #000000 solid;
  background-color: #ffffff;
  color: #000000;
  outline-offset: 2px;
}
.ul-secure-menu .menu-link:active {
  color: #000000;
  background-color: #ffffff;
  text-decoration: underline;
}

@media (min-width: 1280px) {
  .mobile-menu-open .ul-secure-login i,
  .mobile-menu-open .ul-secure-menu-trigger i {
    transition: filter 0.5s ease;
    filter: none;
  }
  .mobile-menu-open .ul-secure-login:hover, .mobile-menu-open .ul-secure-login:active,
  .mobile-menu-open .ul-secure-menu-trigger:hover,
  .mobile-menu-open .ul-secure-menu-trigger:active {
    background-color: #000000;
  }
  .mobile-menu-open .ul-secure-login:hover i, .mobile-menu-open .ul-secure-login:active i,
  .mobile-menu-open .ul-secure-menu-trigger:hover i,
  .mobile-menu-open .ul-secure-menu-trigger:active i {
    transition: none;
    filter: invert(1);
  }
  .mobile-menu-open .ul-secure-menu-trigger:after {
    filter: none;
  }
  .mobile-menu-open .ul-secure-menu-trigger:hover:after, .mobile-menu-open .ul-secure-menu-trigger:active:after {
    filter: none;
  }
}
